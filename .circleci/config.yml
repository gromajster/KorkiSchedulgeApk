version: 2
jobs:
  build:

    working_directory: ~/korki-schedule


    docker:
    - image: circleci/openjdk:8u171-jdk
      environment:
        JDBC_DATABASE_URL: jdbc:postgresql://127.0.0.1/testdb
        JDBC_DATABASE_USERNAME: root
        JDBC_DATABASE_PASSWORD: root

    - image: postgres:9.5-alpine
      environment:
        POSTGRES_PASSWORD: root
        POSTGRES_USER: root
        POSTGRES_DB: testdb

    steps:

    - checkout

    - run: mvn dependency:go-offline
    - run: mvn package
    - run: ls
    - run: mv Dockerfile ./target
    - run: ls target
    - persist_to_workspace:
        root: target
        paths:
          - ./korki-1.0.jar
          - Dockerfile


  deploy:
    docker:
    - image: circleci/buildpack-deps:curl

    steps:
    - attach_workspace:
        at: .
    - run: ls
    - setup_remote_docker
    - run: docker build -t registry.heroku.com/korkischedulgeapk/web . --iidfile image.txt
    - run: cat image.txt
    - run: docker login --username=mkucko145@gmail.com --password=${HEROKU_API_KEY} registry.heroku.com
    - run: docker push registry.heroku.com/korkischedulgeapk/web
    - run: curl -n -X PATCH https://api.heroku.com/apps/korkischedulgeapk/formation --data '{"updates":[{"type":"web","docker_image":"${cat image.txt}"}]}' -H "Content-Type:application/json" -H "Accept:application/vnd.heroku+json; version=3.docker-releases" -H "Authorization:Bearer ${HEROKU_API_KEY}"


workflows:
  version: 2
  build-deploy:
    jobs:
    - build
    - deploy:
        requires:
        - build